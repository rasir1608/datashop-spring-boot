<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datashop.mapper.DProjectMapper">

  <resultMap id="BaseResultMap" type="com.datashop.domain.DProject">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="ui" jdbcType="VARCHAR" property="ui" />
    <result column="web" jdbcType="VARCHAR" property="web" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from d_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.datashop.domain.DProject">
    insert into d_project (id, name, creator, 
      modifier, remarks, model, 
      ui, web, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{creator,jdbcType=INTEGER}, 
      #{modifier,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR},
      #{ui,jdbcType=VARCHAR}, #{web,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <update id="updateById" parameterType="com.datashop.domain.DProject">
    update d_project
    set name = #{name,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=INTEGER},
      modifier = #{modifier,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      ui = #{ui,jdbcType=VARCHAR},
      web = #{web,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, creator, modifier, remarks, model, ui, web, create_time, update_time
    from d_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, creator, modifier, remarks, model, ui, web, create_time, update_time
    from d_project
    where name = #{name,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, creator, modifier, remarks, model, ui, web, create_time, update_time
    from d_project
    order by id
  </select>

  <select id="page" resultMap="BaseResultMap">
    select id, name, creator, modifier, remarks, model, ui, web, create_time, update_time
    from d_project
    <where>
      <if test="id != null and id != ''">
        id = #{id}
      </if>
      <if test="name != null and name != ''">
        and
        name like #{"%"+name+"%"}
      </if>
      <if test="creator != null and creator != ''">
        and
        creator = #{creator}
      </if>
      <if test="modifier != null and modifier != ''">
        and
        modifier = #{modifier}
      </if>
    </where>
    order by update_time desc
    limit #{offset},#{size}
  </select>
  <select id="total" resultType="int">
    select count(*)
    from d_project
    <where>
      <if test="id != null and id != ''">
        id = #{id}
      </if>
      <if test="name != null and name != ''">
        and
        name like #{"%"+name+"%"}
      </if>
      <if test="creator != null and creator != ''">
        and
        creator = #{creator}
      </if>
      <if test="modifier != null and modifier != ''">
        and
        modifier = #{modifier}
      </if>
    </where>
  </select>

  <select id="queryDetail" resultType="Map">
    SELECT dp.id , dp.name,dp.creator,dp.model,dp.ui,dp.web,
    du.name AS creatorName,dp.create_time AS createTime,dp.update_time AS updateTime
    FROM d_project dp
    LEFT JOIN d_user du ON dp.creator = du.id
    WHERE dp.id = #{projectId,jdbcType=INTEGER};
  </select>

</mapper>